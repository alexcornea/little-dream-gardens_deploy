###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.3-alpine as builder

# set work directory
WORKDIR /usr/src/gardens_app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev jpeg-dev zlib-dev libc-dev linux-headers

# lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . .
RUN flake8 --ignore=E501,F401 .

COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/gardens_app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.3-alpine

# create directory for the app user
RUN mkdir -p /home/gardens_app

# create the app user
RUN addgroup -S gardens_app && adduser -S gardens_app -G gardens_app

# create the appropriate directories
ENV HOME=/home/gardens_app
ENV GARDENS_APP_HOME=/home/gardens_app/web
RUN mkdir $GARDENS_APP_HOME
RUN mkdir $GARDENS_APP_HOME/staticfiles
WORKDIR $GARDENS_APP_HOME

# install dependencies
RUN apk update && apk add libpq jpeg-dev zlib-dev postgresql-dev gcc python3-dev musl-dev jpeg-dev zlib-dev libc-dev linux-headers
COPY --from=builder /usr/src/gardens_app/wheels /wheels
COPY --from=builder /usr/src/gardens_app/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $GARDENS_APP_HOME

# copy project
COPY . $GARDENS_APP_HOME

# chown all the files to the app user
RUN chown -R gardens_app:gardens_app $GARDENS_APP_HOME

# change to the app user
USER gardens_app

# run entrypoint.prod.sh
ENTRYPOINT [ "/home/gardens_app/web/entrypoint.prod.sh" ]

